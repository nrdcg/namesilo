// Code generated by gen/gen_test.go DO NOT EDIT.

package namesilo

import (
	"encoding/xml"
	"os"
	"path/filepath"
	"regexp"
	"strings"
	"testing"

	"github.com/stretchr/testify/require"
)

func assertXMLEqual(t *testing.T, model any, fixture string) {
	t.Helper()

	expected, err := os.ReadFile(filepath.FromSlash(fixture))
	require.NoError(t, err)

	err = xml.Unmarshal(expected, model)
	require.NoError(t, err)

	raw, err := xml.MarshalIndent(model, "", "    ")
	require.NoError(t, err)

	// Fix self-closing tags.
	exp, err := regexp.Compile("<(\\w+)></\\w+>")
	require.NoError(t, err)

	raw = exp.ReplaceAll(raw, []byte("<$1/>"))

	if toCleanString(raw) != toCleanString(expected) {
		t.Logf("Got:\n%s\n\nWant:\n%s\n", string(raw), string(expected))
		t.Error("Errors")
	}
}

func toCleanString(data []byte) string {
	return strings.TrimSuffix(strings.ReplaceAll(string(data), "\r\n", "\n"), "\n")
}

{{range $key, $value := .Names }}
func Test{{ $value.Upper }}(t *testing.T) {
	assertXMLEqual(t,  &{{ $value.Upper }}{}, "./fixtures/operations/{{ $value.Lower }}.xml")
}
{{end}}
