// Code generated by gen/gen_test.go DO NOT EDIT.

package namesilo

import (
	"encoding/xml"
	"os"
	"path/filepath"
	"regexp"
	"strings"
	"testing"

	"github.com/stretchr/testify/require"
)

func assertXMLEqual(t *testing.T, model any, fixture string) {
	t.Helper()

	expected, err := os.ReadFile(filepath.FromSlash(fixture))
	require.NoError(t, err)

	err = xml.Unmarshal(expected, model)
	require.NoError(t, err)

	raw, err := xml.MarshalIndent(model, "", "    ")
	require.NoError(t, err)

	// Fix self-closing tags.
	exp, err := regexp.Compile("<(\\w+)></\\w+>")
	require.NoError(t, err)

	raw = exp.ReplaceAll(raw, []byte("<$1/>"))

	if toCleanString(raw) != toCleanString(expected) {
		t.Logf("Got:\n%s\n\nWant:\n%s\n", string(raw), string(expected))
		t.Error("Errors")
	}
}

func toCleanString(data []byte) string {
	return strings.TrimSuffix(strings.ReplaceAll(string(data), "\r\n", "\n"), "\n")
}

func TestAddAccountFunds(t *testing.T) {
	assertXMLEqual(t, &AddAccountFunds{}, "./samples/account/addAccountFunds.xml")
}

func TestAddAutoRenewal(t *testing.T) {
	assertXMLEqual(t, &AddAutoRenewal{}, "./samples/domains/addAutoRenewal.xml")
}

func TestAddPrivacy(t *testing.T) {
	assertXMLEqual(t, &AddPrivacy{}, "./samples/privacy/addPrivacy.xml")
}

func TestAddRegisteredNameServer(t *testing.T) {
	assertXMLEqual(t, &AddRegisteredNameServer{}, "./samples/nameserver/addRegisteredNameServer.xml")
}

func TestBidAuction(t *testing.T) {
	assertXMLEqual(t, &BidAuction{}, "./samples/auctions/bidAuction.xml")
}

func TestBuyNowAuction(t *testing.T) {
	assertXMLEqual(t, &BuyNowAuction{}, "./samples/auctions/buyNowAuction.xml")
}

func TestChangeNameServers(t *testing.T) {
	assertXMLEqual(t, &ChangeNameServers{}, "./samples/nameserver/changeNameServers.xml")
}

func TestCheckRegisterAvailability(t *testing.T) {
	assertXMLEqual(t, &CheckRegisterAvailability{}, "./samples/domains/checkRegisterAvailability.xml")
}

func TestCheckTransferAvailability(t *testing.T) {
	assertXMLEqual(t, &CheckTransferAvailability{}, "./samples/domains/checkTransferAvailability.xml")
}

func TestCheckTransferStatus(t *testing.T) {
	assertXMLEqual(t, &CheckTransferStatus{}, "./samples/transfers/checkTransferStatus.xml")
}

func TestConfigureEmailForward(t *testing.T) {
	assertXMLEqual(t, &ConfigureEmailForward{}, "./samples/email/configureEmailForward.xml")
}

func TestContactAdd(t *testing.T) {
	assertXMLEqual(t, &ContactAdd{}, "./samples/contact/contactAdd.xml")
}

func TestContactDelete(t *testing.T) {
	assertXMLEqual(t, &ContactDelete{}, "./samples/contact/contactDelete.xml")
}

func TestContactDomainAssociate(t *testing.T) {
	assertXMLEqual(t, &ContactDomainAssociate{}, "./samples/contact/contactDomainAssociate.xml")
}

func TestContactList(t *testing.T) {
	assertXMLEqual(t, &ContactList{}, "./samples/contact/contactList.xml")
}

func TestContactUpdate(t *testing.T) {
	assertXMLEqual(t, &ContactUpdate{}, "./samples/contact/contactUpdate.xml")
}

func TestCountExpiringDomains(t *testing.T) {
	assertXMLEqual(t, &CountExpiringDomains{}, "./samples/account/countExpiringDomains.xml")
}

func TestDeleteEmailForward(t *testing.T) {
	assertXMLEqual(t, &DeleteEmailForward{}, "./samples/email/deleteEmailForward.xml")
}

func TestDeleteRegisteredNameServer(t *testing.T) {
	assertXMLEqual(t, &DeleteRegisteredNameServer{}, "./samples/nameserver/deleteRegisteredNameServer.xml")
}

func TestDnsAddRecord(t *testing.T) {
	assertXMLEqual(t, &DnsAddRecord{}, "./samples/dns/dnsAddRecord.xml")
}

func TestDnsDeleteRecord(t *testing.T) {
	assertXMLEqual(t, &DnsDeleteRecord{}, "./samples/dns/dnsDeleteRecord.xml")
}

func TestDnsListRecords(t *testing.T) {
	assertXMLEqual(t, &DnsListRecords{}, "./samples/dns/dnsListRecords.xml")
}

func TestDnsSecAddRecord(t *testing.T) {
	assertXMLEqual(t, &DnsSecAddRecord{}, "./samples/dns/dnsSecAddRecord.xml")
}

func TestDnsSecDeleteRecord(t *testing.T) {
	assertXMLEqual(t, &DnsSecDeleteRecord{}, "./samples/dns/dnsSecDeleteRecord.xml")
}

func TestDnsSecListRecords(t *testing.T) {
	assertXMLEqual(t, &DnsSecListRecords{}, "./samples/dns/dnsSecListRecords.xml")
}

func TestDnsUpdateRecord(t *testing.T) {
	assertXMLEqual(t, &DnsUpdateRecord{}, "./samples/dns/dnsUpdateRecord.xml")
}

func TestDomainForward(t *testing.T) {
	assertXMLEqual(t, &DomainForward{}, "./samples/domains/domainForward.xml")
}

func TestDomainForwardSubDomain(t *testing.T) {
	assertXMLEqual(t, &DomainForwardSubDomain{}, "./samples/domains/domainForwardSubDomain.xml")
}

func TestDomainForwardSubDomainDelete(t *testing.T) {
	assertXMLEqual(t, &DomainForwardSubDomainDelete{}, "./samples/domains/domainForwardSubDomainDelete.xml")
}

func TestDomainLock(t *testing.T) {
	assertXMLEqual(t, &DomainLock{}, "./samples/domains/domainLock.xml")
}

func TestDomainUnlock(t *testing.T) {
	assertXMLEqual(t, &DomainUnlock{}, "./samples/domains/domainUnlock.xml")
}

func TestEmailVerification(t *testing.T) {
	assertXMLEqual(t, &EmailVerification{}, "./samples/email/emailVerification.xml")
}

func TestGetAccountBalance(t *testing.T) {
	assertXMLEqual(t, &GetAccountBalance{}, "./samples/account/getAccountBalance.xml")
}

func TestGetDomainInfo(t *testing.T) {
	assertXMLEqual(t, &GetDomainInfo{}, "./samples/domains/getDomainInfo.xml")
}

func TestGetPrices(t *testing.T) {
	assertXMLEqual(t, &GetPrices{}, "./samples/domains/getPrices.xml")
}

func TestListAuctions(t *testing.T) {
	assertXMLEqual(t, &ListAuctions{}, "./samples/auctions/listAuctions.xml")
}

func TestListDomains(t *testing.T) {
	assertXMLEqual(t, &ListDomains{}, "./samples/domains/listDomains.xml")
}

func TestListEmailForwards(t *testing.T) {
	assertXMLEqual(t, &ListEmailForwards{}, "./samples/email/listEmailForwards.xml")
}

func TestListExpiringDomains(t *testing.T) {
	assertXMLEqual(t, &ListExpiringDomains{}, "./samples/account/listExpiringDomains.xml")
}

func TestListOrders(t *testing.T) {
	assertXMLEqual(t, &ListOrders{}, "./samples/account/listOrders.xml")
}

func TestListRegisteredNameServers(t *testing.T) {
	assertXMLEqual(t, &ListRegisteredNameServers{}, "./samples/nameserver/listRegisteredNameServers.xml")
}

func TestMarketplaceActiveSalesOverview(t *testing.T) {
	assertXMLEqual(t, &MarketplaceActiveSalesOverview{}, "./samples/marketplace/marketplaceActiveSalesOverview.xml")
}

func TestMarketplaceAddOrModifySale(t *testing.T) {
	assertXMLEqual(t, &MarketplaceAddOrModifySale{}, "./samples/marketplace/marketplaceAddOrModifySale.xml")
}

func TestMarketplaceLandingPageUpdate(t *testing.T) {
	assertXMLEqual(t, &MarketplaceLandingPageUpdate{}, "./samples/marketplace/marketplaceLandingPageUpdate.xml")
}

func TestModifyRegisteredNameServer(t *testing.T) {
	assertXMLEqual(t, &ModifyRegisteredNameServer{}, "./samples/nameserver/modifyRegisteredNameServer.xml")
}

func TestOrderDetails(t *testing.T) {
	assertXMLEqual(t, &OrderDetails{}, "./samples/account/orderDetails.xml")
}

func TestPortfolioAdd(t *testing.T) {
	assertXMLEqual(t, &PortfolioAdd{}, "./samples/portfolio/portfolioAdd.xml")
}

func TestPortfolioDelete(t *testing.T) {
	assertXMLEqual(t, &PortfolioDelete{}, "./samples/portfolio/portfolioDelete.xml")
}

func TestPortfolioDomainAssociate(t *testing.T) {
	assertXMLEqual(t, &PortfolioDomainAssociate{}, "./samples/portfolio/portfolioDomainAssociate.xml")
}

func TestPortfolioList(t *testing.T) {
	assertXMLEqual(t, &PortfolioList{}, "./samples/portfolio/portfolioList.xml")
}

func TestRegisterDomain(t *testing.T) {
	assertXMLEqual(t, &RegisterDomain{}, "./samples/domains/registerDomain.xml")
}

func TestRegisterDomainDrop(t *testing.T) {
	assertXMLEqual(t, &RegisterDomainDrop{}, "./samples/domains/registerDomainDrop.xml")
}

func TestRegistrantVerificationStatus(t *testing.T) {
	assertXMLEqual(t, &RegistrantVerificationStatus{}, "./samples/email/registrantVerificationStatus.xml")
}

func TestRemoveAutoRenewal(t *testing.T) {
	assertXMLEqual(t, &RemoveAutoRenewal{}, "./samples/domains/removeAutoRenewal.xml")
}

func TestRemovePrivacy(t *testing.T) {
	assertXMLEqual(t, &RemovePrivacy{}, "./samples/privacy/removePrivacy.xml")
}

func TestRenewDomain(t *testing.T) {
	assertXMLEqual(t, &RenewDomain{}, "./samples/domains/renewDomain.xml")
}

func TestRetrieveAuthCode(t *testing.T) {
	assertXMLEqual(t, &RetrieveAuthCode{}, "./samples/transfers/retrieveAuthCode.xml")
}

func TestTransferDomain(t *testing.T) {
	assertXMLEqual(t, &TransferDomain{}, "./samples/transfers/transferDomain.xml")
}

func TestTransferUpdateChangeEPPCode(t *testing.T) {
	assertXMLEqual(t, &TransferUpdateChangeEPPCode{}, "./samples/transfers/transferUpdateChangeEPPCode.xml")
}

func TestTransferUpdateResendAdminEmail(t *testing.T) {
	assertXMLEqual(t, &TransferUpdateResendAdminEmail{}, "./samples/transfers/transferUpdateResendAdminEmail.xml")
}

func TestTransferUpdateResubmitToRegistry(t *testing.T) {
	assertXMLEqual(t, &TransferUpdateResubmitToRegistry{}, "./samples/transfers/transferUpdateResubmitToRegistry.xml")
}

func TestViewAuction(t *testing.T) {
	assertXMLEqual(t, &ViewAuction{}, "./samples/auctions/viewAuction.xml")
}

func TestViewAuctionHistory(t *testing.T) {
	assertXMLEqual(t, &ViewAuctionHistory{}, "./samples/auctions/viewAuctionHistory.xml")
}

func TestWatchAuction(t *testing.T) {
	assertXMLEqual(t, &WatchAuction{}, "./samples/auctions/watchAuction.xml")
}

func TestWhoisInfo(t *testing.T) {
	assertXMLEqual(t, &WhoisInfo{}, "./samples/domains/whoisInfo.xml")
}
